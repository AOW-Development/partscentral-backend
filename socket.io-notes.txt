io.on : emit events from server to client 
socket.emit : from client to server

socket.io supports multiple data types and aruguments .
=> socket.io('string',{key1:val1,key2:val2},12123)

event emitting with ack :

client :

socket.on('reqData' ,(callback)=>{
	callback('Data received succesfully');
}


Server : 

socket.emit('reqData',(res)=>{
log('something',res)
}



- add nginx header
- enable cors for sockets
- enable middleware for sockets
- pass url of server in client initialiazation (in frontend)and enable the cors on the server.
-
--------------------------------------------------------------------------





Data from frontend to POST request need to commit/save in db :

billingInfo (infor for these see global stores and  payMethod file)
shippingInfo
customerInfo
cartItems
paymentInfo 

when customer places the order take these info and POST request commit in db and than emits a socket.io event to notify admin about newly created Order and socket event contains following info about Order :

{
  "type":"new_order",
  "order": {
    "id":"ord_123",
    "status":"paid",
    "total": 1299,
    "customerName":"",
    "createdAt":"",
    "mobile":"",
    "customer_email":""
  }
}

Check orderController,orderService,orderRoutes it does not support latest changes made in table schema so make it . 
make sure it receveies the data from stores .


----------------------------------------
Data from frontend to POST request need to commit/save in db :billingInfo (infor for these see global stores and  payMethod               │            │    file)shippingInfocustomerInfocartItemspaymentInfo when customer places the order take these info and POST request commit in db and than   │            │    emits a socket.io event to notify admin about newly created Order and socket event contains following info about Order :{                 │            │    "type":"new_order",  "order": {    "id":"ord_123",    "status":"paid",    "total": 1299,    "customerName":"",    "createdAt":"",         │            │    "mobile":"",    "customer_email":""  }}Check orderController,orderService,orderRoutes it does not support latest changes made in table    │            │    schema so make it . make sure it receveies the data from stores . check @autosq-2/src/store/ stores here. and                             │            │    @autosq-2/.next/server/app/account/payMethod/  and check backend here : @database/src/controllers/orderController.ts  and                 │            │    @database/src/services/orderService.ts and @database/src/routes/order.routes.ts check @database/prisma/schema.prisma .